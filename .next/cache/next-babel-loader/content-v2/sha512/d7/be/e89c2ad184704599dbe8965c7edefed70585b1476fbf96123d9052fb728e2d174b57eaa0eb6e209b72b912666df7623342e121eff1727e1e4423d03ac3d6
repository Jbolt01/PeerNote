{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vijay/PeerNote/src/components/SignInButton/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { useBreakpointValue, Flex } from '@chakra-ui/react';\nimport { signIn, signOut, useSession } from 'next-auth/client';\nimport { Button, PopoverTrigger, Popover, Portal, PopoverBody, PopoverContent, PopoverCloseButton, Box } from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\nimport Profile from './Profile';\nimport styles from './styles.module.scss';\nimport useLocale from '../../services/hooks/useLocale';\nexport function SignInButton() {\n  _s();\n\n  var _this = this;\n\n  var _useSession = useSession(),\n      _useSession2 = _slicedToArray(_useSession, 1),\n      session = _useSession2[0];\n\n  var t = useLocale();\n  var initRef = React.useRef();\n  var isWideScreen = useBreakpointValue({\n    base: false,\n    lg: true\n  });\n  var isNotMobile = useBreakpointValue({\n    base: false,\n    sm: true\n  });\n\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.signInButton,\n      onClick: function onClick() {\n        return signIn('google', {\n          callbackUrl: '/community'\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(FaGoogle, {\n        color: \"#00ff9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isNotMobile ? \"\".concat(t.headers.signInWithGoogle) : \"\".concat(t.headers.signIn)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Popover, {\n      closeOnBlur: false,\n      initialFocusRef: initRef,\n      children: function children(_ref) {\n        var isOpen = _ref.isOpen,\n            onClose = _ref.onClose;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              as: \"button\",\n              align: \"center\",\n              ml: \"4\",\n              p: \"2\",\n              borderRadius: \"xl\",\n              children: /*#__PURE__*/_jsxDEV(Profile, {\n                showProfileData: isWideScreen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Portal, {\n            children: /*#__PURE__*/_jsxDEV(PopoverContent, {\n              p: \"2\",\n              bg: \"purple.700\",\n              borderColor: \"purple.900\",\n              children: [/*#__PURE__*/_jsxDEV(PopoverCloseButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: t.signInButton.confirmations\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  mt: 4,\n                  colorScheme: \"purple\",\n                  onClick: function onClick() {\n                    return signOut();\n                  },\n                  ref: initRef,\n                  children: t.signInButton.confirmationButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignInButton, \"DK8UdZoDTE3Pw1m61OhN5kWS83k=\", false, function () {\n  return [useSession, useLocale, useBreakpointValue, useBreakpointValue];\n});\n\n_c = SignInButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInButton\");","map":{"version":3,"sources":["/Users/vijay/PeerNote/src/components/SignInButton/index.tsx"],"names":["React","useBreakpointValue","Flex","signIn","signOut","useSession","Button","PopoverTrigger","Popover","Portal","PopoverBody","PopoverContent","PopoverCloseButton","Box","FaGoogle","Profile","styles","useLocale","SignInButton","session","t","initRef","useRef","isWideScreen","base","lg","isNotMobile","sm","signInButton","callbackUrl","headers","signInWithGoogle","isOpen","onClose","confirmations","confirmationButton"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { useBreakpointValue, Flex } from '@chakra-ui/react';\nimport { signIn, signOut, useSession } from 'next-auth/client';\nimport {\n  Button,\n  PopoverTrigger,\n  Popover,\n  Portal,\n  PopoverBody,\n  PopoverContent,\n  PopoverCloseButton,\n  Box,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\nimport Profile from './Profile';\nimport styles from './styles.module.scss';\nimport useLocale from '../../services/hooks/useLocale';\n\nexport function SignInButton() {\n  const [session] = useSession();\n  const t = useLocale();\n\n  const initRef = React.useRef();\n\n  const isWideScreen = useBreakpointValue({\n    base: false,\n    lg: true,\n  });\n\n  const isNotMobile = useBreakpointValue({\n    base: false,\n    sm: true,\n  });\n\n  if (!session) {\n    return (\n      <button\n        type=\"button\"\n        className={styles.signInButton}\n        onClick={() => signIn('google', { callbackUrl: '/community' })}\n      >\n        <FaGoogle color=\"#00ff9d\" />\n        {isNotMobile ? `${t.headers.signInWithGoogle}` : `${t.headers.signIn}`}\n      </button>\n    );\n  }\n\n  return (\n    <>\n      <Popover closeOnBlur={false} initialFocusRef={initRef}>\n        {({ isOpen, onClose }) => (\n          <>\n            <PopoverTrigger>\n              <Flex as=\"button\" align=\"center\" ml=\"4\" p=\"2\" borderRadius=\"xl\">\n                <Profile showProfileData={isWideScreen} />\n              </Flex>\n            </PopoverTrigger>\n\n            <Portal>\n              <PopoverContent p=\"2\" bg=\"purple.700\" borderColor=\"purple.900\">\n                <PopoverCloseButton />\n                <PopoverBody>\n                  <Box>{t.signInButton.confirmations}</Box>\n                  <Button\n                    mt={4}\n                    colorScheme=\"purple\"\n                    onClick={() => signOut()}\n                    ref={initRef}\n                  >\n                    {t.signInButton.confirmationButton}\n                  </Button>\n                </PopoverBody>\n              </PopoverContent>\n            </Portal>\n          </>\n        )}\n      </Popover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}