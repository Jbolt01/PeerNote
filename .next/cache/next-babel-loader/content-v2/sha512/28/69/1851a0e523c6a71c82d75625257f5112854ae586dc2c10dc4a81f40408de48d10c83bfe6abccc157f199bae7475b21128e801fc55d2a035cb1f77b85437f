{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport { api } from '../api';\nexport function useGetLatestCourses() {\n  _s();\n\n  return useQuery('useGetlatestCourses', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$api$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get('/api/supaRequests', {\n              headers: {\n                type: 'COMMUNITY-get-latest-courses'\n              }\n            });\n\n          case 2:\n            _yield$api$get = _context.sent;\n            data = _yield$api$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\n\n_s(useGetLatestCourses, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport function useGetMostLikedCourses() {\n  _s2();\n\n  return useQuery('useGetMostLikedCourses', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$api$get2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return api.get('/api/supaRequests', {\n              headers: {\n                type: 'COMMUNITY-get-most-liked-courses'\n              }\n            });\n\n          case 2:\n            _yield$api$get2 = _context2.sent;\n            data = _yield$api$get2.data;\n            return _context2.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\n\n_s2(useGetMostLikedCourses, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport function useGetLikedCourses(currentUserId) {\n  _s3();\n\n  return useQuery('useGetLikedCourses', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var _yield$api$get3, data;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return api.get('/api/supaRequests', {\n              headers: {\n                type: 'HOME-get-liked-courses',\n                current_user_id: currentUserId.id\n              }\n            });\n\n          case 2:\n            _yield$api$get3 = _context3.sent;\n            data = _yield$api$get3.data;\n            return _context3.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })), {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\n\n_s3(useGetLikedCourses, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport function useGetSearchedCourses(searchText) {\n  _s4();\n\n  return useQuery('useGetSeachedCourses', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var _yield$api$get4, data;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return api.get('/api/supaRequests', {\n              headers: {\n                type: 'SEARCH-get-searched-courses',\n                search: searchText\n              }\n            });\n\n          case 2:\n            _yield$api$get4 = _context4.sent;\n            data = _yield$api$get4.data;\n            return _context4.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })), {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\n\n_s4(useGetSearchedCourses, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport function useCourses() {\n  _s5();\n\n  return useQuery('courses', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var _yield$api$get5, data;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return api.get('/api/supaRequests', {\n              headers: {\n                type: 'COMMUNITY-get-latest-courses'\n              }\n            });\n\n          case 2:\n            _yield$api$get5 = _context5.sent;\n            data = _yield$api$get5.data;\n            return _context5.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  })), {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\n\n_s5(useCourses, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport function incrementCourseView(_x) {\n  return _incrementCourseView.apply(this, arguments);\n}\n\nfunction _incrementCourseView() {\n  _incrementCourseView = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(courseSlug) {\n    var _yield$api$get6, data;\n\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return api.get('/api/supaRequests', {\n              headers: {\n                type: 'COURSE-increment-course-view',\n                course_slug_number: courseSlug\n              }\n            });\n\n          case 2:\n            _yield$api$get6 = _context6.sent;\n            data = _yield$api$get6.data;\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _incrementCourseView.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/vijay/PeerNote/src/services/hooks/useCourses.ts"],"names":["useQuery","api","useGetLatestCourses","get","headers","type","data","staleTime","useGetMostLikedCourses","useGetLikedCourses","currentUserId","current_user_id","id","useGetSearchedCourses","searchText","search","useCourses","incrementCourseView","courseSlug","course_slug_number"],"mappings":"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","sourcesContent":["import { useQuery } from 'react-query';\nimport { api } from '../api';\n\ntype courseData = {\n  id: number;\n  name: string;\n  image: string;\n  likes: number;\n  materials_available: number;\n};\n\nexport function useGetLatestCourses() {\n  return useQuery<courseData[]>(\n    'useGetlatestCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'COMMUNITY-get-latest-courses',\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useGetMostLikedCourses() {\n  return useQuery<courseData[]>(\n    'useGetMostLikedCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'COMMUNITY-get-most-liked-courses',\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useGetLikedCourses(currentUserId) {\n  return useQuery<courseData[]>(\n    'useGetLikedCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'HOME-get-liked-courses',\n          current_user_id: currentUserId.id,\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useGetSearchedCourses(searchText) {\n  return useQuery<courseData[]>(\n    'useGetSeachedCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'SEARCH-get-searched-courses',\n          search: searchText,\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useCourses() {\n  return useQuery<courseData[]>(\n    'courses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'COMMUNITY-get-latest-courses',\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport async function incrementCourseView(courseSlug: number) {\n  const { data } = await api.get('/api/supaRequests', {\n    headers: {\n      type: 'COURSE-increment-course-view',\n      course_slug_number: courseSlug,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}