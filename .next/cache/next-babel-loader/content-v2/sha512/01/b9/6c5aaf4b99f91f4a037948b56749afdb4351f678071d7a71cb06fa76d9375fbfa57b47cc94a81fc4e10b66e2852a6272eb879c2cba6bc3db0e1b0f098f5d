{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vijay/PeerNote/src/pages/community/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Icon, Img, Box, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, useDisclosure, VStack, FormControl, useToast } from '@chakra-ui/react';\nimport Head from 'next/head';\nimport { RiAddLine } from 'react-icons/ri';\nimport { useSession } from 'next-auth/client';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport router from 'next/router';\nimport { Text } from '@chakra-ui/react';\nimport { api } from '../../services/api';\nimport { Input } from '../../components/form/input';\nimport styles from './styles.module.scss';\nimport { CourseList } from '../../components/CourseList';\nimport { useGetLatestCourses, useGetMostLikedCourses } from '../../services/hooks/useCourses';\nimport useLocale from '../../services/hooks/useLocale';\nvar createCourseFormSchema = yup.object().shape({\n  name: yup.string().max(120, 'Maximum 120 characters').required('Wait, you would not forget the name would you?'),\n  description: yup.string().max(200, 'Maximum 200 characters').required(\"Don't forget the description\"),\n  image: yup.string().url(),\n  tags: yup.string().lowercase().min(3, 'Come on, at least 3 characters you can do it').max(144, 'Maximum 144 characters').required('Tags are important to help others to find the course :)')\n});\nexport var __N_SSP = true;\nexport default function Community(_ref) {\n  _s();\n\n  var currentUser = _ref.currentUser;\n\n  var _useSession = useSession(),\n      _useSession2 = _slicedToArray(_useSession, 1),\n      session = _useSession2[0];\n\n  var toast = useToast();\n  var t = useLocale();\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var currentUserId = currentUser === null || currentUser === void 0 ? void 0 : currentUser.id;\n\n  var _useGetLatestCourses = useGetLatestCourses(),\n      latestCoursesData = _useGetLatestCourses.data,\n      isLoadingLatestCoursesData = _useGetLatestCourses.isLoading,\n      isFetchingLatestCoursesData = _useGetLatestCourses.isFetching,\n      errLatestCoursesData = _useGetLatestCourses.error;\n\n  var _useGetMostLikedCours = useGetMostLikedCourses(),\n      mostLikedCoursesData = _useGetMostLikedCours.data,\n      isLoadingMostLikedCoursesData = _useGetMostLikedCours.isLoading,\n      isFetchingMostLikedCoursesData = _useGetMostLikedCours.isFetching,\n      errMostLikedCoursesData = _useGetMostLikedCours.error;\n\n  var _useForm = useForm({\n    resolver: yupResolver(createCourseFormSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      errors = _useForm.errors;\n\n  var handleCreateCourse = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.post('api/supaRequests', {\n                headers: {\n                  type: 'community-create-course'\n                },\n                values: values,\n                currentUserId: currentUserId\n              });\n\n            case 2:\n              response = _context.sent;\n              onClose();\n\n              if (response.status === 200) {\n                toast({\n                  title: \"\".concat(t.communityPage.toast.title),\n                  description: \"\".concat(t.communityPage.toast.description),\n                  status: 'success',\n                  duration: 2000,\n                  isClosable: true,\n                  position: 'top-right',\n                  onCloseComplete: function onCloseComplete() {\n                    return router.push(\"/community/course/\".concat(response.data.newCourseNumberSlug));\n                  }\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCreateCourse(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [t.communityPage.community, \" | PeerNote\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.topText,\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: \"/assets/icons/world.svg\",\n          alt: \"world, pretty handsome huh?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: ['4xl'],\n          fontWeight: \"bold\",\n          ml: \"2\",\n          children: t.communityPage.community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n        title: t.communityPage.latestCourses,\n        coursesArray: latestCoursesData,\n        isLoading: isLoadingLatestCoursesData,\n        isFetching: isFetchingLatestCoursesData,\n        error: errLatestCoursesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n        title: t.communityPage.topLiked,\n        coursesArray: mostLikedCoursesData,\n        isLoading: isLoadingMostLikedCoursesData,\n        isFetching: isFetchingMostLikedCoursesData,\n        error: errMostLikedCoursesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), !!session && /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        position: \"fixed\",\n        bottom: \"36px\",\n        right: \"36px\",\n        w: \"16\",\n        h: \"16\",\n        alignItems: \"center\",\n        borderRadius: \"full\",\n        size: \"lg\",\n        fontSize: \"lg\",\n        onClick: onOpen,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          as: RiAddLine,\n          fontSize: \"36\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isCentered: true,\n      size: \"3xl\",\n      onClose: onClose,\n      isOpen: isOpen,\n      motionPreset: \"slideInBottom\",\n      blockScrollOnMount: false,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        bg: \"green.900\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: t.communityPage.form.newCourse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              as: \"form\",\n              flex: \"1\",\n              borderRadius: 8,\n              bg: \"green.900\",\n              px: \"8\",\n              py: \"2\",\n              onSubmit: handleSubmit(handleCreateCourse),\n              children: /*#__PURE__*/_jsxDEV(VStack, {\n                spacing: \"4\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"name\",\n                  label: t.communityPage.form.courseName,\n                  description: t.communityPage.form.courseNameEx,\n                  descriptionColor: \"green.300\",\n                  focusBorderColor: \"green.600\",\n                  bg: \"green.700\",\n                  variant: \"filled\",\n                  _hover: {\n                    bgColor: 'green.800'\n                  },\n                  error: errors.name,\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"description\",\n                  label: t.communityPage.form.courseDescription,\n                  focusBorderColor: \"green.600\",\n                  bg: \"green.700\",\n                  variant: \"filled\",\n                  _hover: {\n                    bgColor: 'green.800'\n                  },\n                  error: errors.description,\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"image\",\n                  label: t.communityPage.form.courseUrl,\n                  focusBorderColor: \"green.600\",\n                  bg: \"green.700\",\n                  variant: \"filled\",\n                  _hover: {\n                    bgColor: 'green.800'\n                  },\n                  error: errors.image,\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  w: \"100%\",\n                  justify: \"flex-initial\",\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"tags\",\n                    label: t.communityPage.form.tags,\n                    description: t.communityPage.form.tagsEx,\n                    descriptionColor: \"green.300\",\n                    focusBorderColor: \"green.600\",\n                    bg: \"green.700\",\n                    variant: \"filled\",\n                    _hover: {\n                      bgColor: 'green.800'\n                    },\n                    error: errors.tags,\n                    ref: register\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            as: \"a\",\n            colorScheme: \"whiteAlpha\",\n            variant: \"ghost\",\n            onClick: onClose,\n            children: t.communityPage.form.closeButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"green\",\n            _hover: {\n              bgColor: 'green.600'\n            },\n            ml: \"4\",\n            isLoading: formState.isSubmitting,\n            onClick: handleSubmit(handleCreateCourse),\n            children: t.communityPage.form.createButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Community, \"aIGIOMsp43N35t+6ovSPX2hj2t0=\", false, function () {\n  return [useSession, useToast, useLocale, useDisclosure, useGetLatestCourses, useGetMostLikedCourses, useForm];\n});\n\n_c = Community;\n\nvar _c;\n\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"sources":["/Users/vijay/PeerNote/src/pages/community/index.tsx"],"names":["Button","Icon","Img","Box","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","useDisclosure","VStack","FormControl","useToast","Head","RiAddLine","useSession","yup","yupResolver","useForm","router","Text","api","Input","styles","CourseList","useGetLatestCourses","useGetMostLikedCourses","useLocale","createCourseFormSchema","object","shape","name","string","max","required","description","image","url","tags","lowercase","min","Community","currentUser","session","toast","t","isOpen","onOpen","onClose","currentUserId","id","latestCoursesData","data","isLoadingLatestCoursesData","isLoading","isFetchingLatestCoursesData","isFetching","errLatestCoursesData","error","mostLikedCoursesData","isLoadingMostLikedCoursesData","isFetchingMostLikedCoursesData","errMostLikedCoursesData","resolver","register","handleSubmit","formState","errors","handleCreateCourse","values","post","headers","type","response","status","title","communityPage","duration","isClosable","position","onCloseComplete","push","newCourseNumberSlug","community","main","topText","latestCourses","topLiked","form","newCourse","courseName","courseNameEx","bgColor","courseDescription","courseUrl","tagsEx","closeButton","isSubmitting","createButton"],"mappings":";;;;;;;;;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,YANF,EAOEC,YAPF,EAQEC,WARF,EASEC,WATF,EAUEC,SAVF,EAWEC,aAXF,EAYEC,MAZF,EAaEC,WAbF,EAcEC,QAdF,QAeO,kBAfP;AAiBA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAAqBC,UAArB,QAAuC,kBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAAwBC,OAAxB,QAAuC,iBAAvC;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,KAAT,QAAsB,6BAAtB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SACEC,mBADF,EAEEC,sBAFF,QAGO,iCAHP;AAIA,OAAOC,SAAP,MAAsB,gCAAtB;AAsBA,IAAMC,sBAAsB,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AAChDC,EAAAA,IAAI,EAAEf,GAAG,CACNgB,MADG,GAEHC,GAFG,CAEC,GAFD,EAEM,wBAFN,EAGHC,QAHG,CAGM,gDAHN,CAD0C;AAKhDC,EAAAA,WAAW,EAAEnB,GAAG,CACbgB,MADU,GAEVC,GAFU,CAEN,GAFM,EAED,wBAFC,EAGVC,QAHU,gCALmC;AAShDE,EAAAA,KAAK,EAAEpB,GAAG,CAACgB,MAAJ,GAAaK,GAAb,EATyC;AAUhDC,EAAAA,IAAI,EAAEtB,GAAG,CACNgB,MADG,GAEHO,SAFG,GAGHC,GAHG,CAGC,CAHD,EAGI,8CAHJ,EAIHP,GAJG,CAIC,GAJD,EAIM,wBAJN,EAKHC,QALG,CAKM,yDALN;AAV0C,CAAnB,CAA/B;;AAkBA,eAAe,SAASO,SAAT,OAAwD;AAAA;;AAAA,MAAnCC,WAAmC,QAAnCA,WAAmC;;AAAA,oBACnD3B,UAAU,EADyC;AAAA;AAAA,MAC9D4B,OAD8D;;AAErE,MAAMC,KAAK,GAAGhC,QAAQ,EAAtB;AACA,MAAMiC,CAAC,GAAGlB,SAAS,EAAnB;;AAHqE,uBAKjClB,aAAa,EALoB;AAAA,MAK7DqC,MAL6D,kBAK7DA,MAL6D;AAAA,MAKrDC,MALqD,kBAKrDA,MALqD;AAAA,MAK7CC,OAL6C,kBAK7CA,OAL6C;;AAOrE,MAAMC,aAAa,GAAGP,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEQ,EAAnC;;AAPqE,6BAcjEzB,mBAAmB,EAd8C;AAAA,MAU7D0B,iBAV6D,wBAUnEC,IAVmE;AAAA,MAWxDC,0BAXwD,wBAWnEC,SAXmE;AAAA,MAYvDC,2BAZuD,wBAYnEC,UAZmE;AAAA,MAa5DC,oBAb4D,wBAanEC,KAbmE;;AAAA,8BAqBjEhC,sBAAsB,EArB2C;AAAA,MAiB7DiC,oBAjB6D,yBAiBnEP,IAjBmE;AAAA,MAkBxDQ,6BAlBwD,yBAkBnEN,SAlBmE;AAAA,MAmBvDO,8BAnBuD,yBAmBnEL,UAnBmE;AAAA,MAoB5DM,uBApB4D,yBAoBnEJ,KApBmE;;AAAA,iBAuBfxC,OAAO,CAAC;AAC5D6C,IAAAA,QAAQ,EAAE9C,WAAW,CAACW,sBAAD;AADuC,GAAD,CAvBQ;AAAA,MAuB7DoC,QAvB6D,YAuB7DA,QAvB6D;AAAA,MAuBnDC,YAvBmD,YAuBnDA,YAvBmD;AAAA,MAuBrCC,SAvBqC,YAuBrCA,SAvBqC;AAAA,MAuB1BC,MAvB0B,YAuB1BA,MAvB0B;;AA2BrE,MAAMC,kBAAmD;AAAA,yEAAG,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnChD,GAAG,CAACiD,IAAJ,CAAS,kBAAT,EAA6B;AAClDC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,IAAI,EAAE;AADC,iBADyC;AAIlDH,gBAAAA,MAAM,EAANA,MAJkD;AAKlDpB,gBAAAA,aAAa,EAAbA;AALkD,eAA7B,CADmC;;AAAA;AACpDwB,cAAAA,QADoD;AAS1DzB,cAAAA,OAAO;;AAEP,kBAAIyB,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9B,gBAAAA,KAAK,CAAC;AACJ+B,kBAAAA,KAAK,YAAK9B,CAAC,CAAC+B,aAAF,CAAgBhC,KAAhB,CAAsB+B,KAA3B,CADD;AAEJxC,kBAAAA,WAAW,YAAKU,CAAC,CAAC+B,aAAF,CAAgBhC,KAAhB,CAAsBT,WAA3B,CAFP;AAGJuC,kBAAAA,MAAM,EAAE,SAHJ;AAIJG,kBAAAA,QAAQ,EAAE,IAJN;AAKJC,kBAAAA,UAAU,EAAE,IALR;AAMJC,kBAAAA,QAAQ,EAAE,WANN;AAOJC,kBAAAA,eAAe,EAAE;AAAA,2BACf7D,MAAM,CAAC8D,IAAP,6BAAiCR,QAAQ,CAACrB,IAAT,CAAc8B,mBAA/C,EADe;AAAA;AAPb,iBAAD,CAAL;AAUD;;AAtByD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnDd,kBAAmD;AAAA;AAAA;AAAA,KAAzD;;AAyBA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mBAAQvB,CAAC,CAAC+B,aAAF,CAAgBO,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAE5D,MAAM,CAAC6D,IAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE7D,MAAM,CAAC8D,OAAvB;AAAA,gCACE,QAAC,GAAD;AACE,UAAA,GAAG,EAAC,yBADN;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,CAAC,KAAD,CAAhB;AAAyB,UAAA,UAAU,EAAC,MAApC;AAA2C,UAAA,EAAE,EAAC,GAA9C;AAAA,oBACGxC,CAAC,CAAC+B,aAAF,CAAgBO;AADnB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEtC,CAAC,CAAC+B,aAAF,CAAgBU,aADzB;AAEE,QAAA,YAAY,EAAEnC,iBAFhB;AAGE,QAAA,SAAS,EAAEE,0BAHb;AAIE,QAAA,UAAU,EAAEE,2BAJd;AAKE,QAAA,KAAK,EAAEE;AALT;AAAA;AAAA;AAAA;AAAA,cAXF,eAmBE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEZ,CAAC,CAAC+B,aAAF,CAAgBW,QADzB;AAEE,QAAA,YAAY,EAAE5B,oBAFhB;AAGE,QAAA,SAAS,EAAEC,6BAHb;AAIE,QAAA,UAAU,EAAEC,8BAJd;AAKE,QAAA,KAAK,EAAEC;AALT;AAAA;AAAA;AAAA;AAAA,cAnBF,EA2BG,CAAC,CAACnB,OAAF,iBACC,QAAC,MAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,QAAQ,EAAC,OAFX;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,CAAC,EAAC,IALJ;AAME,QAAA,CAAC,EAAC,IANJ;AAOE,QAAA,UAAU,EAAC,QAPb;AAQE,QAAA,YAAY,EAAC,MARf;AASE,QAAA,IAAI,EAAC,IATP;AAUE,QAAA,QAAQ,EAAC,IAVX;AAWE,QAAA,OAAO,EAAEI,MAXX;AAAA,+BAaE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEjC,SAAV;AAAqB,UAAA,QAAQ,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAmDE,QAAC,KAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,OAAO,EAAEkC,OAHX;AAIE,MAAA,MAAM,EAAEF,MAJV;AAKE,MAAA,YAAY,EAAC,eALf;AAME,MAAA,kBAAkB,EAAE,KANtB;AAAA,8BAQE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC,WAAjB;AAAA,gCACE,QAAC,WAAD;AAAA,oBAAcD,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,iCACE,QAAC,WAAD;AAAA,mCACE,QAAC,GAAD;AACE,cAAA,EAAE,EAAC,MADL;AAEE,cAAA,IAAI,EAAC,GAFP;AAGE,cAAA,YAAY,EAAE,CAHhB;AAIE,cAAA,EAAE,EAAC,WAJL;AAKE,cAAA,EAAE,EAAC,GALL;AAME,cAAA,EAAE,EAAC,GANL;AAOE,cAAA,QAAQ,EAAExB,YAAY,CAACG,kBAAD,CAPxB;AAAA,qCASE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,GAAhB;AAAA,wCACE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,KAAK,EAAEvB,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBE,UAF9B;AAGE,kBAAA,WAAW,EAAE7C,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBG,YAHpC;AAIE,kBAAA,gBAAgB,EAAC,WAJnB;AAKE,kBAAA,gBAAgB,EAAC,WALnB;AAME,kBAAA,EAAE,EAAC,WANL;AAOE,kBAAA,OAAO,EAAC,QAPV;AAQE,kBAAA,MAAM,EAAE;AACNC,oBAAAA,OAAO,EAAE;AADH,mBARV;AAWE,kBAAA,KAAK,EAAEzB,MAAM,CAACpC,IAXhB;AAYE,kBAAA,GAAG,EAAEiC;AAZP;AAAA;AAAA;AAAA;AAAA,wBADF,eAgBE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,aADP;AAEE,kBAAA,KAAK,EAAEnB,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBK,iBAF9B;AAGE,kBAAA,gBAAgB,EAAC,WAHnB;AAIE,kBAAA,EAAE,EAAC,WAJL;AAKE,kBAAA,OAAO,EAAC,QALV;AAME,kBAAA,MAAM,EAAE;AACND,oBAAAA,OAAO,EAAE;AADH,mBANV;AASE,kBAAA,KAAK,EAAEzB,MAAM,CAAChC,WAThB;AAUE,kBAAA,GAAG,EAAE6B;AAVP;AAAA;AAAA;AAAA;AAAA,wBAhBF,eA6BE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,KAAK,EAAEnB,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBM,SAF9B;AAGE,kBAAA,gBAAgB,EAAC,WAHnB;AAIE,kBAAA,EAAE,EAAC,WAJL;AAKE,kBAAA,OAAO,EAAC,QALV;AAME,kBAAA,MAAM,EAAE;AACNF,oBAAAA,OAAO,EAAE;AADH,mBANV;AASE,kBAAA,KAAK,EAAEzB,MAAM,CAAC/B,KAThB;AAUE,kBAAA,GAAG,EAAE4B;AAVP;AAAA;AAAA;AAAA;AAAA,wBA7BF,eA0CE,QAAC,GAAD;AAAK,kBAAA,CAAC,EAAC,MAAP;AAAc,kBAAA,OAAO,EAAC,cAAtB;AAAA,yCACE,QAAC,KAAD;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,KAAK,EAAEnB,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBlD,IAF9B;AAGE,oBAAA,WAAW,EAAEO,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBO,MAHpC;AAIE,oBAAA,gBAAgB,EAAC,WAJnB;AAKE,oBAAA,gBAAgB,EAAC,WALnB;AAME,oBAAA,EAAE,EAAC,WANL;AAOE,oBAAA,OAAO,EAAC,QAPV;AAQE,oBAAA,MAAM,EAAE;AACNH,sBAAAA,OAAO,EAAE;AADH,qBARV;AAWE,oBAAA,KAAK,EAAEzB,MAAM,CAAC7B,IAXhB;AAYE,oBAAA,GAAG,EAAE0B;AAZP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eA2EE,QAAC,WAAD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,GADL;AAEE,YAAA,WAAW,EAAC,YAFd;AAGE,YAAA,OAAO,EAAC,OAHV;AAIE,YAAA,OAAO,EAAEhB,OAJX;AAAA,sBAMGH,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBQ;AANxB;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,WAAW,EAAC,OAFd;AAGE,YAAA,MAAM,EAAE;AACNJ,cAAAA,OAAO,EAAE;AADH,aAHV;AAME,YAAA,EAAE,EAAC,GANL;AAOE,YAAA,SAAS,EAAE1B,SAAS,CAAC+B,YAPvB;AAQE,YAAA,OAAO,EAAEhC,YAAY,CAACG,kBAAD,CARvB;AAAA,sBAUGvB,CAAC,CAAC+B,aAAF,CAAgBY,IAAhB,CAAqBU;AAVxB;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3EF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnDF;AAAA,kBADF;AAkKD;;GAtNuBzD,S;UACJ1B,U,EACJH,Q,EACJe,S,EAE0BlB,a,EAShCgB,mB,EAOAC,sB,EAEkDR,O;;;KAvBhCuB,S","sourcesContent":["import {\n  Button,\n  Icon,\n  Img,\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  useDisclosure,\n  VStack,\n  FormControl,\n  useToast,\n} from '@chakra-ui/react';\nimport { GetServerSideProps } from 'next';\nimport Head from 'next/head';\nimport { RiAddLine } from 'react-icons/ri';\nimport { getSession, useSession } from 'next-auth/client';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\nimport router from 'next/router';\nimport { Text } from '@chakra-ui/react';\nimport { supabase } from '../../services/supabase';\n\nimport { api } from '../../services/api';\nimport { Input } from '../../components/form/input';\n\nimport styles from './styles.module.scss';\nimport { CourseList } from '../../components/CourseList';\nimport {\n  useGetLatestCourses,\n  useGetMostLikedCourses,\n} from '../../services/hooks/useCourses';\nimport useLocale from '../../services/hooks/useLocale';\n\ntype CreateCourseData = {\n  name: string;\n  description: string;\n  image?: string;\n  tags: string;\n  creator_id: string;\n};\n\ntype CurrentUserData = {\n  id: string;\n  name: string;\n  email: string;\n  avatar_url: string;\n  id: number;\n};\n\ninterface CommunityPageProps {\n  currentUser: CurrentUserData;\n}\n\nconst createCourseFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .max(120, 'Maximum 120 characters')\n    .required('Wait, you would not forget the name would you?'),\n  description: yup\n    .string()\n    .max(200, 'Maximum 200 characters')\n    .required(`Don't forget the description`),\n  image: yup.string().url(),\n  tags: yup\n    .string()\n    .lowercase()\n    .min(3, 'Come on, at least 3 characters you can do it')\n    .max(144, 'Maximum 144 characters')\n    .required('Tags are important to help others to find the course :)'),\n});\n\nexport default function Community({ currentUser }: CommunityPageProps) {\n  const [session] = useSession();\n  const toast = useToast();\n  const t = useLocale();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const currentUserId = currentUser?.id;\n\n  const {\n    data: latestCoursesData,\n    isLoading: isLoadingLatestCoursesData,\n    isFetching: isFetchingLatestCoursesData,\n    error: errLatestCoursesData,\n  } = useGetLatestCourses();\n\n  const {\n    data: mostLikedCoursesData,\n    isLoading: isLoadingMostLikedCoursesData,\n    isFetching: isFetchingMostLikedCoursesData,\n    error: errMostLikedCoursesData,\n  } = useGetMostLikedCourses();\n\n  const { register, handleSubmit, formState, errors } = useForm({\n    resolver: yupResolver(createCourseFormSchema),\n  });\n\n  const handleCreateCourse: SubmitHandler<CreateCourseData> = async values => {\n    const response = await api.post('api/supaRequests', {\n      headers: {\n        type: 'community-create-course',\n      },\n      values,\n      currentUserId,\n    });\n\n    onClose();\n\n    if (response.status === 200) {\n      toast({\n        title: `${t.communityPage.toast.title}`,\n        description: `${t.communityPage.toast.description}`,\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n        position: 'top-right',\n        onCloseComplete: () =>\n          router.push(`/community/course/${response.data.newCourseNumberSlug}`),\n      });\n    }\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{t.communityPage.community} | PeerNote</title>\n      </Head>\n\n      <div className={styles.main}>\n        <div className={styles.topText}>\n          <Img\n            src=\"/assets/icons/world.svg\"\n            alt=\"world, pretty handsome huh?\"\n          />\n          <Text fontSize={['4xl']} fontWeight=\"bold\" ml=\"2\">\n            {t.communityPage.community}\n          </Text>\n        </div>\n\n        <CourseList\n          title={t.communityPage.latestCourses}\n          coursesArray={latestCoursesData}\n          isLoading={isLoadingLatestCoursesData}\n          isFetching={isFetchingLatestCoursesData}\n          error={errLatestCoursesData}\n        />\n\n        <CourseList\n          title={t.communityPage.topLiked}\n          coursesArray={mostLikedCoursesData}\n          isLoading={isLoadingMostLikedCoursesData}\n          isFetching={isFetchingMostLikedCoursesData}\n          error={errMostLikedCoursesData}\n        />\n\n        {!!session && (\n          <Button\n            colorScheme=\"green\"\n            position=\"fixed\"\n            bottom=\"36px\"\n            right=\"36px\"\n            w=\"16\"\n            h=\"16\"\n            alignItems=\"center\"\n            borderRadius=\"full\"\n            size=\"lg\"\n            fontSize=\"lg\"\n            onClick={onOpen}\n          >\n            <Icon as={RiAddLine} fontSize=\"36\" />\n          </Button>\n        )}\n      </div>\n\n      <Modal\n        isCentered\n        size=\"3xl\"\n        onClose={onClose}\n        isOpen={isOpen}\n        motionPreset=\"slideInBottom\"\n        blockScrollOnMount={false}\n      >\n        <ModalOverlay />\n        <ModalContent bg=\"green.900\">\n          <ModalHeader>{t.communityPage.form.newCourse}</ModalHeader>\n          <ModalBody>\n            <FormControl>\n              <Box\n                as=\"form\"\n                flex=\"1\"\n                borderRadius={8}\n                bg=\"green.900\"\n                px=\"8\"\n                py=\"2\"\n                onSubmit={handleSubmit(handleCreateCourse)}\n              >\n                <VStack spacing=\"4\">\n                  <Input\n                    name=\"name\"\n                    label={t.communityPage.form.courseName}\n                    description={t.communityPage.form.courseNameEx}\n                    descriptionColor=\"green.300\"\n                    focusBorderColor=\"green.600\"\n                    bg=\"green.700\"\n                    variant=\"filled\"\n                    _hover={{\n                      bgColor: 'green.800',\n                    }}\n                    error={errors.name}\n                    ref={register}\n                  />\n\n                  <Input\n                    name=\"description\"\n                    label={t.communityPage.form.courseDescription}\n                    focusBorderColor=\"green.600\"\n                    bg=\"green.700\"\n                    variant=\"filled\"\n                    _hover={{\n                      bgColor: 'green.800',\n                    }}\n                    error={errors.description}\n                    ref={register}\n                  />\n\n                  <Input\n                    name=\"image\"\n                    label={t.communityPage.form.courseUrl}\n                    focusBorderColor=\"green.600\"\n                    bg=\"green.700\"\n                    variant=\"filled\"\n                    _hover={{\n                      bgColor: 'green.800',\n                    }}\n                    error={errors.image}\n                    ref={register}\n                  />\n\n                  <Box w=\"100%\" justify=\"flex-initial\">\n                    <Input\n                      name=\"tags\"\n                      label={t.communityPage.form.tags}\n                      description={t.communityPage.form.tagsEx}\n                      descriptionColor=\"green.300\"\n                      focusBorderColor=\"green.600\"\n                      bg=\"green.700\"\n                      variant=\"filled\"\n                      _hover={{\n                        bgColor: 'green.800',\n                      }}\n                      error={errors.tags}\n                      ref={register}\n                    />\n                  </Box>\n                </VStack>\n              </Box>\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              as=\"a\"\n              colorScheme=\"whiteAlpha\"\n              variant=\"ghost\"\n              onClick={onClose}\n            >\n              {t.communityPage.form.closeButton}\n            </Button>\n            <Button\n              type=\"submit\"\n              colorScheme=\"green\"\n              _hover={{\n                bgColor: 'green.600',\n              }}\n              ml=\"4\"\n              isLoading={formState.isSubmitting}\n              onClick={handleSubmit(handleCreateCourse)}\n            >\n              {t.communityPage.form.createButton}\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ req }) => {\n  const session = await getSession({ req });\n\n  const currentUserEmail = session?.user.email;\n  const { data: currentUser, error } = await supabase\n    .from('users')\n    .select('id, name, email, avatar_url, id')\n    .eq('email', `${currentUserEmail}`)\n    .single();\n\n  return {\n    props: { currentUser },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}