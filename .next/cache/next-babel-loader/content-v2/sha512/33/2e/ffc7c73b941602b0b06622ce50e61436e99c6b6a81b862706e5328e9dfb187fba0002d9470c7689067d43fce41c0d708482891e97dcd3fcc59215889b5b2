{"ast":null,"code":"import _defineProperty from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/vijay/PeerNote/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/vijay/PeerNote/src/components/ActiveLink/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { cloneElement } from 'react';\nexport var ActiveLink = function ActiveLink(_ref) {\n  _s();\n\n  var _ref$matchExactHref = _ref.matchExactHref,\n      matchExactHref = _ref$matchExactHref === void 0 ? false : _ref$matchExactHref,\n      activeClassName = _ref.activeClassName,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"matchExactHref\", \"activeClassName\", \"children\"]);\n\n  var router = useRouter();\n  var isActive = matchExactHref ? router.asPath === rest.href : router.asPath.startsWith(String(rest.href));\n  var className = isActive ? activeClassName : '';\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, rest), {}, {\n    children: /*#__PURE__*/cloneElement(children, {\n      className: className\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActiveLink, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveLink\");","map":{"version":3,"sources":["/Users/vijay/PeerNote/src/components/ActiveLink/index.tsx"],"names":["Link","useRouter","cloneElement","ActiveLink","matchExactHref","activeClassName","children","rest","router","isActive","asPath","href","startsWith","String","className"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAgC,WAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA2C,OAA3C;AAQA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAKH;AAAA;;AAAA,iCAJrBC,cAIqB;AAAA,MAJrBA,cAIqB,oCAJJ,KAII;AAAA,MAHrBC,eAGqB,QAHrBA,eAGqB;AAAA,MAFrBC,QAEqB,QAFrBA,QAEqB;AAAA,MADlBC,IACkB;;AACrB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAMQ,QAAQ,GAAGL,cAAc,GAC3BI,MAAM,CAACE,MAAP,KAAkBH,IAAI,CAACI,IADI,GAE3BH,MAAM,CAACE,MAAP,CAAcE,UAAd,CAAyBC,MAAM,CAACN,IAAI,CAACI,IAAN,CAA/B,CAFJ;AAIA,MAAMG,SAAS,GAAGL,QAAQ,GAAGJ,eAAH,GAAqB,EAA/C;AAEA,sBACE,QAAC,IAAD,kCAAUE,IAAV;AAAA,2BACGL,YAAY,CAACI,QAAD,EAAW;AACtBQ,MAAAA,SAAS,EAATA;AADsB,KAAX;AADf;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CApBM;;GAAMX,U;UAMIF,S;;;KANJE,U","sourcesContent":["import Link, { LinkProps } from 'next/link';\nimport { useRouter } from 'next/router';\nimport { cloneElement, ReactElement } from 'react';\n\ninterface ActiveLinkProps extends LinkProps {\n  children: ReactElement;\n  matchExactHref?: boolean;\n  activeClassName: string;\n}\n\nexport const ActiveLink = ({\n  matchExactHref = false,\n  activeClassName,\n  children,\n  ...rest\n}: ActiveLinkProps) => {\n  const router = useRouter();\n  const isActive = matchExactHref\n    ? router.asPath === rest.href\n    : router.asPath.startsWith(String(rest.href));\n\n  const className = isActive ? activeClassName : '';\n\n  return (\n    <Link {...rest}>\n      {cloneElement(children, {\n        className,\n      })}\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}