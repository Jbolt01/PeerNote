{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Text, Box, Flex, VStack, HStack, Spacer, Button, Img, Icon, Link as ChakraLink, useToast } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { getSession, useSession } from 'next-auth/client';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\nimport { FiExternalLink } from 'react-icons/fi';\nimport { supabase } from '../../../services/supabase';\nimport { NotFound } from '../../../components/NotFound';\nimport { api } from '../../../services/api';\nexport default function Material({\n  singleMaterialData: material,\n  materialLiked,\n  currentUserData,\n  notUser = false\n}) {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(materialLiked);\n  const toast = useToast();\n  const session = useSession();\n  const currentUserId = currentUserData === null || currentUserData === void 0 ? void 0 : currentUserData.id;\n  const materialId = material === null || material === void 0 ? void 0 : material.id;\n\n  const handleLikeMaterial = async () => {\n    // try {\n    if (session) {\n      if (liked === false) {\n        setLiked(!liked);\n        const response = await api.post('/api/supaRequests', {\n          headers: {\n            type: 'RESUME-like-material'\n          },\n          currentUserId,\n          materialId\n        });\n      } else {\n        setLiked(!liked);\n        const response = await api.post('/api/supaRequests', {\n          headers: {\n            type: 'RESUME-unlike-material'\n          },\n          currentUserId,\n          materialId\n        });\n      }\n    } else {\n      toast({\n        title: 'Error',\n        description: 'You must be logged in to like and organize your materials ðŸ˜Š',\n        status: 'error',\n        position: 'top-left',\n        duration: 6000,\n        isClosable: true\n      });\n    } // } catch {\n    //   throw Error;\n    // }\n\n  };\n\n  if (material === null) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsx(\"title\", {\n          children: \"404 material page\"\n        })\n      }), /*#__PURE__*/_jsx(NotFound, {})]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: material.name\n      })\n    }), /*#__PURE__*/_jsx(Flex, {\n      w: \"100%\",\n      h: \"calc(100vh - 6rem)\",\n      py: {\n        base: '0',\n        md: '20'\n      },\n      align: \"center\",\n      children: /*#__PURE__*/_jsxs(Box, {\n        display: {\n          md: 'flex'\n        },\n        width: \"90%\",\n        maxWidth: 1080,\n        mx: \"auto\",\n        alignSelf: \"center\",\n        border: \"1px\",\n        borderColor: \"purple.500\",\n        borderRadius: \"2xl\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxs(Box, {\n          position: \"relative\",\n          maxHeight: {\n            sm: '240px',\n            md: 'lg',\n            lg: 'lg'\n          },\n          h: {\n            lg: 'lg',\n            md: 'lg',\n            sm: '240px'\n          },\n          w: {\n            sm: '100%',\n            md: '50%',\n            lg: '50%'\n          },\n          borderRadius: \"2xl\",\n          children: [/*#__PURE__*/_jsx(Img, {\n            maxHeight: {\n              lg: 'lg',\n              md: 'lg',\n              sm: '240px'\n            },\n            h: {\n              lg: 'lg',\n              md: 'lg',\n              sm: '240px'\n            },\n            w: \"50%\",\n            boxSize: \"100%\",\n            objectFit: \"cover\",\n            src: material.image !== '' ? material.image : '/assets/illustrations/MaterialImageSource.svg',\n            fallback: \"/assets/illustrations/MaterialImageSource.svg\",\n            alt: \"Course Image\",\n            borderRadius: \"2xl\"\n          }), /*#__PURE__*/_jsxs(VStack, {\n            position: \"absolute\",\n            bottom: \"20px\",\n            px: ['4', '4', '8'],\n            py: ['2', '4', '4'],\n            bg: \"purple.900\",\n            alignItems: \"left\",\n            borderRightRadius: \"16\",\n            spacing: \"1/4\",\n            children: [/*#__PURE__*/_jsx(Text, {\n              fontSize: ['sm', 'sm', 'md'],\n              fontWeight: \"400\",\n              fontStyle: \"Italic\",\n              color: \"purple.500\",\n              children: \"By:\"\n            }), /*#__PURE__*/_jsx(Text, {\n              fontWeight: \"600\",\n              fontSize: ['md', 'lg', 'xl'],\n              children: material.users.name\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(VStack, {\n          bg: \"purple.900\",\n          h: {\n            md: 'lg',\n            sm: 'md'\n          },\n          w: {\n            sm: '100%',\n            md: '50%',\n            lg: '50%'\n          },\n          minWidth: {\n            md: '50%',\n            lg: '50%'\n          },\n          alignItems: \"left\",\n          borderBottomRadius: \"2xl\",\n          borderTopRightRadius: \"2xl\",\n          children: [/*#__PURE__*/_jsx(Text, {\n            mb: ['1', '2', '4'],\n            fontWeight: \"700\",\n            fontSize: ['xl', '2xl', '3xl'],\n            lineHeight: \"9\",\n            px: ['6', '8'],\n            pt: ['2', '3', '6'],\n            children: material.name\n          }), /*#__PURE__*/_jsx(Text, {\n            px: ['6', '8'],\n            lineHeight: \"5\",\n            color: \"purple.500\",\n            noOfLines: 6,\n            fontSize: ['sm', 'md', 'lg'],\n            children: material.description\n          }), /*#__PURE__*/_jsx(Spacer, {}), /*#__PURE__*/_jsxs(Box, {\n            px: \"8\",\n            children: [/*#__PURE__*/_jsx(Text, {\n              fontWeight: \"400\",\n              fontStyle: \"Italic\",\n              color: \"purple.500\",\n              mb: \"1\",\n              children: \"Link:\"\n            }), /*#__PURE__*/_jsx(Box, {\n              px: \"4\",\n              py: \"2\",\n              borderRadius: \"2xl\",\n              border: \"1px\",\n              borderColor: \"purple.500\",\n              children: /*#__PURE__*/_jsx(Text, {\n                fontWeight: \"200\",\n                fontSize: ['lg', 'xl'],\n                color: \"gray.700\",\n                noOfLines: 2,\n                as: \"abbr\",\n                children: material.link\n              })\n            }), /*#__PURE__*/_jsxs(Flex, {\n              align: \"center\",\n              justify: \"end\",\n              mt: \"4\",\n              mb: \"4\",\n              w: \"100%\",\n              children: [/*#__PURE__*/_jsx(Link, {\n                href: `/community/course/${material.courses.id}`,\n                children: /*#__PURE__*/_jsx(Button, {\n                  size: \"md\",\n                  colorScheme: \"purple\",\n                  color: \"purple.500\",\n                  h: \"10\",\n                  mr: \"4\",\n                  variant: \"outline\",\n                  _hover: {\n                    bg: 'purple.700'\n                  },\n                  children: \"Course Page\"\n                })\n              }), /*#__PURE__*/_jsx(ChakraLink, {\n                href: material.link,\n                isExternal: true,\n                h: \"10\",\n                _hover: {\n                  textDecoration: 'none'\n                },\n                children: /*#__PURE__*/_jsxs(Button, {\n                  size: \"md\",\n                  colorScheme: \"purple\",\n                  color: \"purple.900\",\n                  _focus: {\n                    boxShadow: 'none'\n                  },\n                  _hover: {\n                    bg: 'purple.550'\n                  },\n                  children: [\"Go to Link\", /*#__PURE__*/_jsx(Icon, {\n                    ml: \"2\",\n                    mt: \"2\",\n                    h: \"6\",\n                    w: \"6\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsx(FiExternalLink, {})\n                  })]\n                })\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(Box, {\n            align: \"right\",\n            w: \"100%\",\n            children: /*#__PURE__*/_jsx(HStack, {\n              w: \"16\",\n              bgColor: \"purple.800\",\n              borderBottomRightRadius: \"2xl\",\n              borderTopLeftRadius: \"2xl\",\n              children: /*#__PURE__*/_jsx(Button, {\n                pl: \"5\",\n                size: \"lg\",\n                color: \"purple.500\",\n                variant: \"unstyled\",\n                fontSize: \"2xl\",\n                justifyContent: \"center\",\n                onClick: handleLikeMaterial,\n                isDisabled: notUser,\n                children: liked ? /*#__PURE__*/_jsx(AiFillHeart, {}) : /*#__PURE__*/_jsx(AiOutlineHeart, {})\n              })\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\nexport const getServerSideProps = async ({\n  params,\n  req\n}) => {\n  const {\n    id\n  } = params;\n  const session = await getSession({\n    req\n  });\n\n  if (session) {\n    const currentUserEmail = session.user.email;\n    const {\n      data: currentUserData\n    } = await supabase.from('users').select('id, name, email, avatar_url, id').eq('email', `${currentUserEmail}`).single();\n    const {\n      data: singleMaterialData\n    } = await supabase.from('materials').select(`\n        id, name, description, image, link, tags, creator_id, created_at,\n        users: creator_id ( name ),\n        courses: course_id ( id )\n        `).eq('id', String(id)).single(); // console.log(JSON.stringify(singleMaterialData, null, 2))\n\n    const {\n      data: liked\n    } = await supabase.from('material_likes').select(`\n      *,\n      users: user_id ( name )\n      `).eq('material_id', String(id)).eq('user_id', String(currentUserData.id)).single();\n    const materialLiked = liked !== null;\n    return {\n      props: {\n        singleMaterialData,\n        currentUserData,\n        materialLiked\n      }\n    };\n  } // if user not logged in\n\n\n  const {\n    data: singleMaterialData\n  } = await supabase.from('materials').select(`\n      id, name, description, image, link, tags, creator_id, created_at,\n      users: creator_id ( name ),\n      courses: course_id ( id )\n    `).eq('id', String(id)).single();\n  const notUser = true;\n  return {\n    props: {\n      singleMaterialData,\n      notUser\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}