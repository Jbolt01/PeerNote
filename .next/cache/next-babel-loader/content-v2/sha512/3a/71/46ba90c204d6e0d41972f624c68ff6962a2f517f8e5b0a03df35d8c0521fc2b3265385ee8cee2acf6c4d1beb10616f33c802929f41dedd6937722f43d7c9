{"ast":null,"code":"import { useRef } from 'react';\nexport default function useDebounce(fn, delay) {\n  var timeoutRef = useRef(null);\n\n  function debouncedFn() {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(function () {\n      fn.apply(void 0, params);\n    }, delay);\n  }\n\n  return debouncedFn;\n}","map":null,"metadata":{},"sourceType":"module"}