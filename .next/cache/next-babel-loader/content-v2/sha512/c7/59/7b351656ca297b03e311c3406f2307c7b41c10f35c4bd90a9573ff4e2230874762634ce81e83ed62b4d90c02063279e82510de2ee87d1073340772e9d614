{"ast":null,"code":"import { useQuery } from 'react-query';\nimport { api } from '../api';\nexport function useGetLatestCourses() {\n  return useQuery('useGetlatestCourses', async () => {\n    const {\n      data\n    } = await api.get('/api/supaRequests', {\n      headers: {\n        type: 'COMMUNITY-get-latest-courses'\n      }\n    });\n    return data;\n  }, {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\nexport function useGetMostLikedCourses() {\n  return useQuery('useGetMostLikedCourses', async () => {\n    const {\n      data\n    } = await api.get('/api/supaRequests', {\n      headers: {\n        type: 'COMMUNITY-get-most-liked-courses'\n      }\n    });\n    return data;\n  }, {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\nexport function useGetLikedCourses(currentUserId) {\n  return useQuery('useGetLikedCourses', async () => {\n    const {\n      data\n    } = await api.get('/api/supaRequests', {\n      headers: {\n        type: 'HOME-get-liked-courses',\n        current_user_id: currentUserId.id\n      }\n    });\n    return data;\n  }, {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\nexport function useGetSearchedCourses(searchText) {\n  return useQuery('useGetSeachedCourses', async () => {\n    const {\n      data\n    } = await api.get('/api/supaRequests', {\n      headers: {\n        type: 'SEARCH-get-searched-courses',\n        search: searchText\n      }\n    });\n    return data;\n  }, {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\nexport function useCourses() {\n  return useQuery('courses', async () => {\n    const {\n      data\n    } = await api.get('/api/supaRequests', {\n      headers: {\n        type: 'COMMUNITY-get-latest-courses'\n      }\n    });\n    return data;\n  }, {\n    staleTime: 1000 * 5 // 5 sec\n\n  });\n}\nexport async function incrementCourseView(courseSlug) {\n  const {\n    data\n  } = await api.get('/api/supaRequests', {\n    headers: {\n      type: 'COURSE-increment-course-view',\n      course_slug_number: courseSlug\n    }\n  });\n}","map":{"version":3,"sources":["/Users/vijay/PeerNote/src/services/hooks/useCourses.ts"],"names":["useQuery","api","useGetLatestCourses","data","get","headers","type","staleTime","useGetMostLikedCourses","useGetLikedCourses","currentUserId","current_user_id","id","useGetSearchedCourses","searchText","search","useCourses","incrementCourseView","courseSlug","course_slug_number"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAT,QAAoB,QAApB;AAUA,OAAO,SAASC,mBAAT,GAA+B;AACpC,SAAOF,QAAQ,CACb,qBADa,EAEb,YAAY;AACV,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAClDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AADyC,KAA7B,CAAvB;AAMA,WAAOH,IAAP;AACD,GAVY,EAWb;AACEI,IAAAA,SAAS,EAAE,OAAO,CADpB,CACuB;;AADvB,GAXa,CAAf;AAeD;AAED,OAAO,SAASC,sBAAT,GAAkC;AACvC,SAAOR,QAAQ,CACb,wBADa,EAEb,YAAY;AACV,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAClDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AADyC,KAA7B,CAAvB;AAMA,WAAOH,IAAP;AACD,GAVY,EAWb;AACEI,IAAAA,SAAS,EAAE,OAAO,CADpB,CACuB;;AADvB,GAXa,CAAf;AAeD;AAED,OAAO,SAASE,kBAAT,CAA4BC,aAA5B,EAA2C;AAChD,SAAOV,QAAQ,CACb,oBADa,EAEb,YAAY;AACV,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAClDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,wBADC;AAEPK,QAAAA,eAAe,EAAED,aAAa,CAACE;AAFxB;AADyC,KAA7B,CAAvB;AAOA,WAAOT,IAAP;AACD,GAXY,EAYb;AACEI,IAAAA,SAAS,EAAE,OAAO,CADpB,CACuB;;AADvB,GAZa,CAAf;AAgBD;AAED,OAAO,SAASM,qBAAT,CAA+BC,UAA/B,EAA2C;AAChD,SAAOd,QAAQ,CACb,sBADa,EAEb,YAAY;AACV,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAClDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,6BADC;AAEPS,QAAAA,MAAM,EAAED;AAFD;AADyC,KAA7B,CAAvB;AAOA,WAAOX,IAAP;AACD,GAXY,EAYb;AACEI,IAAAA,SAAS,EAAE,OAAO,CADpB,CACuB;;AADvB,GAZa,CAAf;AAgBD;AAED,OAAO,SAASS,UAAT,GAAsB;AAC3B,SAAOhB,QAAQ,CACb,SADa,EAEb,YAAY;AACV,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAClDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AADyC,KAA7B,CAAvB;AAMA,WAAOH,IAAP;AACD,GAVY,EAWb;AACEI,IAAAA,SAAS,EAAE,OAAO,CADpB,CACuB;;AADvB,GAXa,CAAf;AAeD;AAED,OAAO,eAAeU,mBAAf,CAAmCC,UAAnC,EAAuD;AAC5D,QAAM;AAAEf,IAAAA;AAAF,MAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAClDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,8BADC;AAEPa,MAAAA,kBAAkB,EAAED;AAFb;AADyC,GAA7B,CAAvB;AAMD","sourcesContent":["import { useQuery } from 'react-query';\nimport { api } from '../api';\n\ntype courseData = {\n  id: number;\n  name: string;\n  image: string;\n  likes: number;\n  materials_available: number;\n};\n\nexport function useGetLatestCourses() {\n  return useQuery<courseData[]>(\n    'useGetlatestCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'COMMUNITY-get-latest-courses',\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useGetMostLikedCourses() {\n  return useQuery<courseData[]>(\n    'useGetMostLikedCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'COMMUNITY-get-most-liked-courses',\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useGetLikedCourses(currentUserId) {\n  return useQuery<courseData[]>(\n    'useGetLikedCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'HOME-get-liked-courses',\n          current_user_id: currentUserId.id,\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useGetSearchedCourses(searchText) {\n  return useQuery<courseData[]>(\n    'useGetSeachedCourses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'SEARCH-get-searched-courses',\n          search: searchText,\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport function useCourses() {\n  return useQuery<courseData[]>(\n    'courses',\n    async () => {\n      const { data } = await api.get('/api/supaRequests', {\n        headers: {\n          type: 'COMMUNITY-get-latest-courses',\n        },\n      });\n\n      return data;\n    },\n    {\n      staleTime: 1000 * 5, // 5 sec\n    }\n  );\n}\n\nexport async function incrementCourseView(courseSlug: number) {\n  const { data } = await api.get('/api/supaRequests', {\n    headers: {\n      type: 'COURSE-increment-course-view',\n      course_slug_number: courseSlug,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}